

allprojects {
	    group = "com.hoddmimes.jsontransform"
	    version = 1.0

}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.hidetake:gradle-ssh-plugin:2.1.1"
    }
}

subprojects {
        apply plugin: 'java'





    sourceCompatibility = 1.8

    sourceSets {
       main {
          java {
            srcDir 'java/main'
          }
       }
       test {
         java {
            srcDir 'java/test'
        }
      }
   }

    repositories {
         mavenCentral()
    }


   dependencies {
       implementation group: 'com.github.erosb', name: 'everit-json-schema-jdk6', version: '1.9.2'
       implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
       implementation group: 'org.mongodb', name: 'mongo-java-driver', version: '3.8.2'
       implementation group: 'junit', name: 'junit', version: '4.12'
       implementation group: 'xalan', name: 'xalan', version: '2.7.2'
   }
}


project(':jtransform') {

    apply plugin: 'maven-publish'
    apply plugin: "org.hidetake.ssh"

    task buildGenerateJar (type: Jar) {
        baseName = 'pojojson-generate';
        version = '1.0'
        destinationDir = file("../")

        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }

        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
        from('build/classes/java/main') {
            include '**/*.class'
        }

        from('xsl') {
            include '*.xsl'
        }

        doLast {
            println('Generate JAR successfully built!')
        }
    }

    
    build.finalizedBy(buildGenerateJar)

    remotes {
        webServer {
            host = '192.168.42.11'
            port = 11721
            user = 'bertilsson'
            identity = file('/home/bertilsson/.ssh/id_rsa')
        }
    }

    task deploy {
        doLast {
            ssh.run {
                session(remotes.webServer) {
                    execute 'sudo ./maven-create-dir.sh com/hoddmimes/pojojson-generate/1.0'
                }
            }
        }
    }

    tasks.withType(PublishToMavenRepository) { task ->
        task.dependsOn deploy
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId = 'com.hoddmimes'
                artifactId = 'pojojson-generate'
                artifact("../pojojson-generate-" + version + ".jar") {
                    extension 'jar'
                }
            }
        }
        repositories {
            maven {
                name 'hoddmimes'
                url 'https://www.hoddmimes.com/maven'
                credentials {
                    username project.hoddmimesMavenUser
                    password project.hoddmimesMavenPassword
                }
            }
        }
    }


    dependencies {
    }
}




project(':sample') {
    apply plugin: 'maven-publish'
    apply plugin: "org.hidetake.ssh"


    task(generateTestClasses, type: JavaExec) {
        main = 'JsonTransform'
        classpath = files('../pojojson-generate-1.0.jar')
        args "-xml","./xml/TestMessagesFileSet.xml"
    }

    
    task buildJars() {
        dependsOn 'buildPOJOJSONJar'
        dependsOn 'buildTestJar'
        
        doLast {
            println('Successfully build the pojojson and pojojson-test JARS !') 
        }
    }

    task buildTestJar (type: Jar) {
        baseName = 'pojojson-tests';
        version = '1.0'
        destinationDir = file("../")

        from {
            configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
        from('out/production/classes') {
            include '**/*.class'
        }

        from('out/test/classes') {
            include '**/*.class'
        }
    }
    
    task buildPOJOJSONJar (type: Jar) {
        baseName = 'pojojson';
        version = '1.0'
        destinationDir = file("../")
        
        from('build/classes/java/main/') {
            include '**/jsontransform/*.class'
        }
    }

    remotes {
        webServer {
            host = '192.168.42.11'
            port = 11721
            user = 'bertilsson'
            identity = file('/home/bertilsson/.ssh/id_rsa')
        }
    }

    task deploy {
        doLast {
            ssh.run {
                session(remotes.webServer) {
                    execute 'sudo ./maven-create-dir.sh com/hoddmimes/pojojson/1.0'
                }
            }
        }
    }

    tasks.withType(PublishToMavenRepository) { task ->
        task.dependsOn deploy
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId = 'com.hoddmimes'
                artifactId = 'pojojson'
                artifact("../pojojson-" + version + ".jar") {
                    extension 'jar'
                }
            }
        }
        repositories {
            maven {
                name 'hoddmimes'
                url 'https://www.hoddmimes.com/maven'
                credentials {
                    username project.hoddmimesMavenUser
                    password project.hoddmimesMavenPassword
                }
            }
        }
    }
    

    compileJava.dependsOn('generateTestClasses')
    build.finalizedBy(buildJars) 
    
    dependencies {
        compile project(':jtransform')
    }
}










